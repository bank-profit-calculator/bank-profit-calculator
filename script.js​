// ✅ بيانات البنوك والشهادات (محدثة)
const bankProducts = [
  {
    bank: "بنك مصر",
    certificates: [
      { 
        name: "شهادة القمة", 
        rate: 17, 
        type: "شهادة", 
        duration: "3 سنوات",
        minAmount: 1000,
        currency: "EGP"
      },
      { 
        name: "وديعة استثمارية", 
        rate: 15.5, 
        type: "وديعة", 
        duration: "1 سنة",
        minAmount: 5000,
        currency: "EGP"
      }
    ]
  },
  {
    bank: "البنك الأهلي",
    certificates: [
      { 
        name: "شهادة الاستثمار", 
        rate: 18.5, 
        type: "شهادة", 
        duration: "5 سنوات",
        minAmount: 5000,
        currency: "EGP"
      },
      { 
        name: "وديعة قصيرة الأجل", 
        rate: 16, 
        type: "وديعة", 
        duration: "6 أشهر",
        minAmount: 10000,
        currency: "USD"
      }
    ]
  }
];

// ✅ تهيئة التطبيق عند تحميل الصفحة
document.addEventListener('DOMContentLoaded', function() {
  populateBanks();
  
  // إضافة حدث لإعادة الحساب عند تغيير أي مدخل
  document.getElementById('amount').addEventListener('input', calculateInterest);
  document.getElementById('rate').addEventListener('input', calculateInterest);
  document.querySelectorAll('input[name="period"]').forEach(radio => {
    radio.addEventListener('change', calculateInterest);
  });
  document.getElementById('currency').addEventListener('change', calculateInterest);
});

// ✅ تعبئة قائمة البنوك
function populateBanks() {
  const bankSelect = document.getElementById("bank");
  bankSelect.innerHTML = '<option value="" disabled selected>-- اختر البنك --</option>';
  
  bankProducts.forEach(bank => {
    const option = document.createElement("option");
    option.value = bank.bank;
    option.textContent = bank.bank;
    bankSelect.appendChild(option);
  });
}

// ✅ تحديث قائمة المنتجات البنكية
function updateCertificates() {
  const bankName = document.getElementById("bank").value;
  const certificateSelect = document.getElementById("certificate");
  const selectedFilter = document.querySelector('input[name="filterType"]:checked').value;

  certificateSelect.innerHTML = '<option value="" disabled selected>-- اختر منتج بنكي --</option>';

  if (!bankName) return;

  const selectedBank = bankProducts.find(bank => bank.bank === bankName);
  if (!selectedBank) return;

  let filteredProducts = selectedBank.certificates;
  
  if (selectedFilter !== "all") {
    filteredProducts = filteredProducts.filter(product => product.type === selectedFilter);
  }

  filteredProducts.forEach(product => {
    const option = document.createElement("option");
    option.value = product.name;
    option.textContent = `${product.name} (${product.rate}%) - ${product.type}`;
    option.dataset.rate = product.rate;
    certificateSelect.appendChild(option);
  });
}

// ✅ تعيين نسبة الفائدة تلقائيًا
function setRateFromCertificate() {
  const certSelect = document.getElementById("certificate");
  const rateInput = document.getElementById("rate");
  
  if (certSelect.selectedIndex > 0) {
    rateInput.value = certSelect.options[certSelect.selectedIndex].dataset.rate;
    calculateInterest(); // تحديث النتيجة تلقائيًا
  } else {
    rateInput.value = "";
  }
}

// ✅ حساب العائد البنكي
function calculateInterest() {
  const amountInput = document.getElementById("amount");
  const rateInput = document.getElementById("rate");
  const period = document.querySelector('input[name="period"]:checked').value;
  const currency = document.getElementById("currency").value;
  const resultDiv = document.getElementById("result");

  // التحقق من صحة المدخلات
  if (!amountInput.value || !rateInput.value) {
    resultDiv.textContent = "الرجاء إدخال جميع البيانات المطلوبة";
    return;
  }

  const amount = parseFloat(amountInput.value);
  const rate = parseFloat(rateInput.value);

  if (isNaN(amount) || isNaN(rate) || amount <= 0 || rate <= 0) {
    resultDiv.textContent = "الرجاء إدخال قيم صحيحة أكبر من الصفر";
    return;
  }

  const yearlyInterest = (amount * rate) / 100;
  let result;

  switch (period) {
    case "daily":
      result = yearlyInterest / 365;
      break;
    case "monthly":
      result = yearlyInterest / 12;
      break;
    case "yearly":
      result = yearlyInterest;
      break;
  }

  const currencySymbol = getCurrencySymbol(currency);
  const periodName = getPeriodName(period);

  resultDiv.innerHTML = `
    <div class="result-card">
      <h3>نتيجة الحساب</h3>
      <p>العائد ${periodName}: <strong>${result.toFixed(2)} ${currencySymbol}</strong></p>
      <p>المبلغ الأصلي: ${amount.toFixed(2)} ${currencySymbol}</p>
      <p>المبلغ الإجمالي: ${(amount + (period === 'yearly' ? result : yearlyInterest)).toFixed(2)} ${currencySymbol}</p>
    </div>
  `;
}

// ✅ اسم الفترة
function getPeriodName(period) {
  const periods = {
    daily: "اليومي",
    monthly: "الشهري",
    yearly: "السنوي"
  };
  return periods[period] || '';
}

// ✅ رمز العملة
function getCurrencySymbol(currency) {
  const symbols = {
    EGP: "جنيه",
    USD: "دولار",
    SAR: "ريال",
    EUR: "يورو"
  };
  return symbols[currency] || '';
}

// ✅ تبديل الوضع الليلي
function toggleTheme() {
  document.body.classList.toggle('dark-theme');
  const btn = document.getElementById("toggleTheme");
  btn.textContent = document.body.classList.contains("dark-theme") 
    ? "☀️ الوضع النهاري" 
    : "🌙 الوضع الليلي";
  
  // حفظ التفضيل في localStorage
  localStorage.setItem('darkMode', document.body.classList.contains('dark-theme'));
}

// ✅ التحقق من الوضع المظلم عند التحميل
function checkDarkModePreference() {
  if (localStorage.getItem('darkMode') === 'true') {
    document.body.classList.add('dark-theme');
    document.getElementById("toggleTheme").textContent = "☀️ الوضع النهاري";
  }
}

// تهيئة الوضع المظلم عند التحميل
checkDarkModePreference();
