// ? ?????? ?????? + ???????? / ??????? + ?????? ?????
const bankCertificates = [
  {
    bank: "??? ???",
    certificates: [
      { name: "????? ?????", rate: 19, type: "?????", pros: "???? ????? ??? ????? ????? ???????", cons: "?? ???? ????? ??? 6 ????" },
      { name: "????? ??????", rate: 17, type: "?????", pros: "???? ???? ???? ?????", cons: "?? ????? ????????" },
      { name: "????? ????? ?????", rate: 13, type: "?????", pros: "????? ?? ????? (?? ??? ?? ???)", cons: "???? ??? ?? ????????" }
    ]
  },
  {
    bank: "????? ?????? ??????",
    certificates: [
      { name: "????? ?????????", rate: 18.5, type: "?????", pros: "???? ????? ??? ????", cons: "???? ?????? ????? ????? ???????" },
      { name: "????? ???????", rate: 16.5, type: "?????", pros: "????? ?? ????????? ??? 6 ????", cons: "???? ???? ?? ????? ?? ?????" },
      { name: "????? ???? 6 ????", rate: 12.75, type: "?????", pros: "??? ????? ?????? ????? ???????", cons: "???? ????? ?????? ?????????" }
    ]
  },
  {
    bank: "??? ???????",
    certificates: [
      { name: "????? ???????", rate: 18, type: "?????", pros: "??? ????? ???? ????", cons: "??? ?????? ????? ???????" },
      { name: "????? ????????", rate: 15, type: "?????", pros: "????? ??????? ?? ???? ?????", cons: "???? ????? ??????" },
      { name: "????? ??????? ??????", rate: 13.5, type: "?????", pros: "??? ???? ????? ?????", cons: "?????? ???? ???" }
    ]
  },
  {
    bank: "CIB - ????? ??????? ??????",
    certificates: [
      { name: "????? Wealth", rate: 20, type: "?????", pros: "???? ?????? ????? ?? ?????", cons: "???? ?????? ?????" },
      { name: "????? CIB", rate: 14, type: "?????", pros: "????? ?? ???????? ????? ????????", cons: "??? ???? ?? ????????" }
    ]
  },
  {
    bank: "QNB ??????",
    certificates: [
      { name: "????? ????? ??????", rate: 17.5, type: "?????", pros: "???? ???? ???? 3 ?????", cons: "?? ???? ????????? ??? 6 ????" },
      { name: "????? QNB ???????", rate: 14.25, type: "?????", pros: "????? ??????? ????????? ????? ?? ???????", cons: "???? ??? ?????? ????" }
    ]
  },
  {
    bank: "??? ??????????",
    certificates: [
      { name: "????? ????? ????", rate: 16.25, type: "?????", pros: "??? ??? ????? ?????? ????????? ???? ?????", cons: "????? ??????? ???" },
      { name: "????? ????????", rate: 13.75, type: "?????", pros: "?????? ??????? ?????????? ????? ?? ??????", cons: "????? ??? ???? ??????" }
    ]
  },
  {
    bank: "?????? ??????",
    certificates: [
      { name: "????? ??????", rate: 18.25, type: "?????", pros: "???? ???? ????? ??? ????", cons: "????? ???????? ???? ?????" },
      { name: "????? ????????", rate: 6.5, type: "?????", pros: "?????? ?????? ??????? ?????? ?????????", cons: "?????? ????? ?????? ??????? ???????" }
    ]
  }
];

// ? ????? ?????? ?? ??????
function populateBanks() {
  const bankSelect = document.getElementById("bank");
  bankCertificates.forEach(bank => {
    const option = document.createElement("option");
    option.value = bank.bank;
    option.text = bank.bank;
    bankSelect.appendChild(option);
  });
}

// ? ????? ???????? ??? ????? + ??????
function updateCertificates() {
  const bankName = document.getElementById("bank").value;
  const certificateSelect = document.getElementById("certificate");
  const selectedFilter = document.querySelector('input[name="filterType"]:checked')?.value;

  certificateSelect.innerHTML = "<option disabled selected>???? ????? / ?????</option>";

  const selectedBank = bankCertificates.find(bank => bank.bank === bankName);

  if (selectedBank) {
    let filteredCertificates = selectedBank.certificates;

    if (selectedFilter !== "all") {
      filteredCertificates = filteredCertificates.filter(cert => cert.type === selectedFilter);
    }

    filteredCertificates.forEach(cert => {
      const option = document.createElement("option");
      option.value = cert.name;
      option.text = `${cert.name} (${cert.type})`;
      certificateSelect.appendChild(option);
    });
  }
}

// ? ????? ?????? ????????
function setRateFromCertificate() {
  const bankName = document.getElementById("bank").value;
  const certName = document.getElementById("certificate").value;
  const rateInput = document.getElementById("rate");

  const selectedBank = bankCertificates.find(bank => bank.bank === bankName);
  const selectedCert = selectedBank.certificates.find(cert => cert.name === certName);

  if (selectedCert) {
    rateInput.value = selectedCert.rate;
  }
}

// ? ???? ??????
function calculateInterest() {
  let amount = parseFloat(document.getElementById("amount").value);
  let rate = parseFloat(document.getElementById("rate").value);
  let period = document.querySelector('input[name="period"]:checked')?.value;
  let currency = document.getElementById("currency").value;

  if (isNaN(amount) || isNaN(rate) || !period) {
    document.getElementById("result").innerText = "?? ???? ???? ???????? ???? ???? ??";
    return;
  }

  let yearlyInterest = (amount * rate) / 100;
  let result;

  if (period === "daily") {
    result = yearlyInterest / 365;
  } else if (period === "monthly") {
    result = yearlyInterest / 12;
  } else {
    result = yearlyInterest;
  }

  document.getElementById("result").innerText =
    `?? ?????? ${getPeriodName(period)}: ${result.toFixed(2)} ${getCurrencySymbol(currency)}`;
}

// ? ????? ??????
function getPeriodName(value) {
  switch (value) {
    case 'daily': return '??????';
    case 'monthly': return '??????';
    case 'yearly': return '??????';
    default: return '';
  }
}

// ? ??? ??????
function getCurrencySymbol(code) {
  switch (code) {
    case 'EGP': return '????';
    case 'USD': return '$';
    case 'SAR': return '?.?';
    case 'EUR': return '€';
    default: return '';
  }
}

// ? ????? ??????
function toggleTheme() {
  document.body.classList.toggle('dark');
  const btn = document.getElementById("toggleTheme");
  btn.innerText = document.body.classList.contains("dark") ? "?? ????? ???????" : "?? ????? ??????";
}

// ? ???? ???????? ??????
function buildComparisonTable() {
  const tbody = document.querySelector("#comparisonTable tbody");
  tbody.innerHTML = "";

  bankCertificates.forEach(bank => {
    bank.certificates.forEach(cert => {
      const row = document.createElement("tr");
      row.innerHTML = `
        <td>${bank.bank}</td>
        <td>${cert.name}</td>
        <td>${cert.type}</td>
        <td>${cert.rate}%</td>
        <td><button onclick="useCertificate('${bank.bank}', '${cert.name}')">????</button></td>
      `;
      tbody.appendChild(row);
    });
  });
}

// ? ?????? ????? ?? ??????
function useCertificate(bankName, certName) {
  document.getElementById("bank").value = bankName;
  updateCertificates();
  setTimeout(() => {
    document.getElementById("certificate").value = certName;
    setRateFromCertificate();
    window.scrollTo({ top: 0, behavior: "smooth" });
  }, 200);
}

// ? ????? ???? PDF
function downloadComparisonPDF() {
  const table = document.getElementById("advancedComparisonTable");
  const options = {
    margin: 0.5,
    filename: '??????_????????_????????.pdf',
    image: { type: 'jpeg', quality: 0.98 },
    html2canvas: { scale: 2 },
    jsPDF: { unit: 'in', format: 'a4', orientation: 'portrait' }
  };
  html2pdf().set(options).from(table).save();
}

// ? ?????? ??? ??????
function shareOnWhatsApp() {
  const rows = document.querySelectorAll("#advancedComparisonTable tbody tr");
  if (rows.length === 0) {
    alert("???? ??? ???? ???????? ????? ??? ????????.");
    return;
  }

  let message = "?? ?????? ???????? ????????:\n\n";
  rows.forEach(row => {
    const cells = row.querySelectorAll("td");
    message += `?? ?????: ${cells[0].innerText}\n`;
    message += `?? ?????: ${cells[1].innerText}\n`;
    message += `?? ?????: ${cells[2].innerText}\n`;
    message += `? ????????: ${cells[3].innerText}\n`;
    message += `? ??????: ${cells[4].innerText}\n`;
    message += `?? ???????: ${cells[5].innerText}%\n`;
    message += "------------------------\n";
  });

  const encodedMessage = encodeURIComponent(message);
  const whatsappURL = `https://wa.me/?text=${encodedMessage}`;
  window.open(whatsappURL, "_blank");
}

// ? ????? ???????? ????????
function filterAdvancedComparison() {
  const type = document.getElementById("multiFilterType").value;
  const selectedBanks = Array.from(document.querySelectorAll('#multiBankFilter input:checked')).map(cb => cb.value);
  const table = document.querySelector("#advancedComparisonTable tbody");
  table.innerHTML = "";

  bankCertificates.forEach(item => {
    if (selectedBanks.length > 0 && !selectedBanks.includes(item.bank)) return;

    item.certificates.forEach(cert => {
      if (type !== "all" && cert.type !== type) return;

      const row = document.createElement("tr");
      row.innerHTML = `
        <td>${item.bank}</td>
        <td>${cert.name}</td>
        <td>${cert.type}</td>
        <td>${cert.pros || "—"}</td>
        <td>${cert.cons || "—"}</td>
        <td>${cert.rate}%</td>
      `;
      table.appendChild(row);
    });
  });
}

// ? ????? ???? ???????? ???????? (checkboxes)
function populateMultiBankFilter() {
  const container = document.getElementById("multiBankFilter");
  container.innerHTML = "";
  bankCertificates.forEach(bank => {
    const label = document.createElement("label");
    label.innerHTML = `<input type="checkbox" value="${bank.bank}"> ${bank.bank}`;
    container.appendChild(label);
  });
}

// ? ????? ??? ??? ??????
window.onload = function () {
  populateBanks();
  buildComparisonTable();
  populateMultiBankFilter();
};
